(window.webpackJsonp=window.webpackJsonp||[]).push([[287],{944:function(t,s,a){"use strict";a.r(s);var e=a(20),l=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("贪心算法（又称贪婪算法）是一种在每一步选中都采取在当前状态下最好或最优（即最有利）的选择，从而希望导致结果是全局最好或最优的算法。")]),t._v(" "),a("p",[t._v("贪心算法与"),a("u",[t._v("动态规划")]),t._v("的不同在于它对每个子问题的解决方案都做出选择，不能回退。动态规划则会保存以前的运算结果，并根据以前的结果对当前进行选择，有回退功能。")]),t._v(" "),a("p",[t._v("贪心算法可以解决一些最优化问题，如：求图中的最小生成树、求哈弗曼编码等。")])]),t._v(" "),a("h2",{attrs:{id:"相关题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关题目"}},[t._v("#")]),t._v(" 相关题目")])])}),[],!1,null,null,null);s.default=l.exports}}]);