(window.webpackJsonp=window.webpackJsonp||[]).push([[337],{1017:function(s,e,t){"use strict";t.r(e);var a=t(20),r=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("如果拿汽车来做比:")]),s._v(" "),t("ul",[t("li",[s._v("Docker好比汽车引擎，")]),s._v(" "),t("li",[s._v("Dockerfile相当于汽车蓝图，")]),s._v(" "),t("li",[s._v("Docker image(镜像)就是汽车样板，")]),s._v(" "),t("li",[s._v("Docker container(容器)类似于汽车的零部件，")]),s._v(" "),t("li",[s._v("Docker Registry可以看作是4s店，")]),s._v(" "),t("li",[s._v("Docker Compose就像老司机,")]),s._v(" "),t("li",[s._v("Docker Volume就像是汽车的油箱, 如果把容器间内的io数据流比喻成汽油,")]),s._v(" "),t("li",[s._v("Docker Swarm(或者K8s)就是交通枢纽。")])]),s._v(" "),t("h3",{attrs:{id:"安装-ifconfig-命令-虚拟机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-ifconfig-命令-虚拟机"}},[s._v("#")]),s._v(" 安装 ifconfig 命令, 虚拟机")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" net-tools\n")])])]),t("h3",{attrs:{id:"docker安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker安装"}},[s._v("#")]),s._v(" docker安装")]),s._v(" "),t("ul",[t("li",[s._v("卸载旧版本")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum remove docker "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-client "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-client-latest "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-common "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-latest "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-latest-logrotate "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-logrotate "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-selinux "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-engine-selinux "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-engine\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("yum remove docker-ce docker-ce-cli containerd.io\n")])])]),t("ul",[t("li",[s._v("安装存储驱动")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y yum-utils device-mapper-persistent-data lvm2\n")])])]),t("ul",[t("li",[s._v("下载官方的yum源文件")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n")])])]),t("ul",[t("li",[s._v("安装docker-ce")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y docker-ce-18.09.0-3.el7 docker-ce-cli-18.09.0-3.el7 containerd.io-1.2.0-3.el7\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce\n")])])]),t("p",[t("strong",[s._v("1.启动docker")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("systemctl start docker \n")])])]),t("p",[t("strong",[s._v("2.停止docker")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("systemctl stop docker\n")])])]),t("p",[t("strong",[s._v("重启docker")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n")])])]),t("p",[t("strong",[s._v("3.docker 配置镜像")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/docker/daemon.json \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"registry-mirrors"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://registry.docker-cn.com"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[t("strong",[s._v("查看有哪些镜像")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker image ls\n")])])]),t("p",[t("strong",[s._v("docker 安装镜像")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker pull tomcat\n")])])]),t("p",[t("strong",[s._v("拉取镜像")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker container pull [name]\n")])])]),t("p",[t("strong",[s._v("连接镜像")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("--link dockerName\n")])])]),t("p",[t("strong",[s._v("进入容器")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker exec -it [container_id] bash\n")])])]),t("p",[t("strong",[s._v("修改docker 启动容器指定端口")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker container run  -p 8080:8080 [container_name]\n")])])]),t("p",[t("strong",[s._v("docker 从 docker容器中拷贝文件到本地种")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker cp tomcat:/usr/local/tomcat/conf/web.xml ./\n// 将tomcat 文件下的web.xml配置， 复制到当前目录\n")])])]),t("p",[t("strong",[s._v("docker 同时删除多个符合条件的容器")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('docker rm $(docker container ls -f "status=exited" -q)\n')])])]),t("p",[t("strong",[s._v("docker 刪除镜像")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker rmi [imagename]\n")])])]),t("p",[t("strong",[s._v("docker 配置nginx")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker container run -p 8881:80 --name nginx -v /root/webserver/:/www -v /usr/local/nginx/conf/nginx.conf:/etc/nginx/nginx.conf -v /usr/local/nginx/logs/:/wwwlogs -d nginx\n")])])]),t("h3",{attrs:{id:"docker-compose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[s._v("#")]),s._v(" docker-compose")]),s._v(" "),t("p",[s._v("1.docker-compose的使用非常类似于docker命令的使用，但是需要注意的是大部分的compose命令都需要到docker-compose.yml文件所在的目录下才能执行。")]),s._v(" "),t("p",[t("strong",[s._v("docker-compose up")])]),s._v(" "),t("p",[s._v("【命令解释】 命令聚合每个容器的输出，命令退出时，所有容器都将停止。")]),s._v(" "),t("p",[t("strong",[s._v("docker-compose up -d")])]),s._v(" "),t("p",[s._v("【命令解释】 在后台启动容器并使它们保持运行。")]),s._v(" "),t("p",[t("strong",[s._v("docker-compose logs -f")])]),s._v(" "),t("p",[s._v("【命令解释】 查看该容器的启动的日志打印(日志从头打印)。")]),s._v(" "),t("p",[t("strong",[s._v("docker logs -f container_id")])]),s._v(" "),t("p",[s._v("【命令解释】 查看某一容器的启动的日志打印(日志从头打印)。")]),s._v(" "),t("p",[t("strong",[s._v("docker logs -f --tail 数量词 container_id")])]),s._v(" "),t("p",[s._v("【命令解释】 查看某一容器的启动的日志打印(查看最后n条日志打印)。 例：docker logs -f --tail 50 44b")]),s._v(" "),t("p",[t("strong",[s._v("docker-compose stop")])]),s._v(" "),t("p",[s._v("【命令解释】 停止compose服务。")]),s._v(" "),t("p",[t("strong",[s._v("docker-compose restart")])]),s._v(" "),t("p",[s._v("【命令解释】 重启compose服务。")]),s._v(" "),t("p",[t("strong",[s._v("docker-compose kill")])]),s._v(" "),t("p",[s._v("【命令解释】 kill compose服务。")]),s._v(" "),t("p",[t("strong",[s._v("docker-compose ps")])]),s._v(" "),t("p",[s._v("【命令解释】查看compose服务状态。")]),s._v(" "),t("p",[t("strong",[s._v("docker-compose rm")])]),s._v(" "),t("p",[s._v("【命令解释】删除compose服务。")])])}),[],!1,null,null,null);e.default=r.exports}}]);