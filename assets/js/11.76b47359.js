(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{518:function(s,t,a){s.exports=a.p+"assets/img/640.0a0431c9.gif"},519:function(s,t,a){s.exports=a.p+"assets/img/640-1589974729329.2a8ce9f5.gif"},520:function(s,t,a){s.exports=a.p+"assets/img/640-1589975149166.686ae54f.gif"},521:function(s,t,a){s.exports=a.p+"assets/img/640-1589975215579.1298832b.gif"},522:function(s,t,a){s.exports=a.p+"assets/img/640-1589974849302.6b8427b4.gif"},523:function(s,t,a){s.exports=a.p+"assets/img/640-1589974978612.7189da32.gif"},524:function(s,t,a){s.exports=a.p+"assets/img/640-1589975005127.758ead2c.gif"},525:function(s,t,a){s.exports=a.p+"assets/img/640-1589975754710.cda25104.gif"},526:function(s,t,a){s.exports=a.p+"assets/img/640-1589975776044.4131550e.gif"},964:function(s,t,a){"use strict";a.r(t);var e=a(20),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("[TOC]")]),s._v(" "),e("p",[s._v("基本涵盖了在开发中用到的 git 命令，能满足日常需求。")]),s._v(" "),e("h2",{attrs:{id:"配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看全局配置列表")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config -l\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看局部配置列表")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --local --list\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看已设置的全局用户名/邮箱")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global --get user.name\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global --get user.email\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置全局用户名/邮箱")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xiejiahe"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"example@example.com"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置本地当前工作区仓库用户名/邮箱")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --local user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xiejiahe"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --local user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"example@example.com"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除配置")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --unset --global user.name\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --unset --global user.email\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将默认文本编辑器设置为 emacs")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global core.editor emacs\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将默认差异化分析工具设置为 vimdiff")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global merge.tool vimdiff\n")])])]),e("h2",{attrs:{id:"生成-ssh-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成-ssh-key"}},[s._v("#")]),s._v(" 生成 SSH_Key")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1、粘贴以下命令，替换为您的GitHub电子邮件地址")]),s._v("\nssh-keygen -t rsa -b "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v(" -C "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your_email@example.com"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2、当提示“输入要在其中保存密钥的文件”时，按Enter。接受默认文件位置。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Enter a "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" to save the key "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("/Users/you/.ssh/id_rsa"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Press enter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3、在提示符下，键入一个安全密码。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Enter passphrase "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("empty "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" no passphrase"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Type a passphrase"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Enter same passphrase again: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Type passphrase again"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),e("p",[s._v("最后需要将生成的 SSH Key 添加到 "),e("code",[s._v("ssh config")]),s._v(" 中")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1、编辑")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" ~/.ssh/config\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2、粘贴下面到 config 文件中")]),s._v("\nHost *\n  AddKeysToAgent "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n  UseKeychain "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n  IdentityFile ~/.ssh/id_rsa\n")])])]),e("h2",{attrs:{id:"初始化仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化仓库"}},[s._v("#")]),s._v(" 初始化仓库")]),s._v(" "),e("p",[e("code",[s._v("git init")]),s._v(" 创建一个空的 Git 仓库或重新初始化一个现有的仓库")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 会在当前目录生成.git")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以安静模式创建，只会打印错误或警告信息")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init -q\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个裸仓库, 通常情况下用不上")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init --bare\n")])])]),e("h2",{attrs:{id:"文件状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件状态"}},[s._v("#")]),s._v(" 文件状态")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 完整查看文件状态")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以短格式给出输出")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status -s\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 忽略子模块")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status --ignore-submodules\n")])])]),e("h2",{attrs:{id:"日志"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日志"}},[s._v("#")]),s._v(" 日志")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看完整历史提交记录")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看前N次提交记录 commit message")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log -2\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看前N次提交记录，包括diff")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log -p -2\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 搜索关键词")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log -S Java\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只显示合并日志")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --merges\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以图形查看日志记录, --oneline 可选")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --graph --oneline\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出提交者贡献数量, 只会打印作者和贡献数量")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" shortlog -sn\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以提交贡献数量排序并打印出message")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" shortlog -n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 采用邮箱格式化的方式进行查看贡献度")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" shortlog -e\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 README.md 文件的修改历史记录，包括时间、作者以及内容")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" blame README.md\n")])])]),e("h2",{attrs:{id:"克隆"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#克隆"}},[s._v("#")]),s._v(" 克隆")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# https 协议")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/xjh22222228/git-manual.git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# SSH协议")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone git@github.com:xjh22222228/git-manual.git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 克隆某个分支， -b 指定分支名字")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone -b master https://github.com/xjh22222228/git-manual.git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 递归克隆，如果项目包含子模块就非常有用")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone --recursive git@github.com:xjh22222228/git-manual.git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 克隆深度为1, 不会把历史的记录也克隆，这样可以节省克隆时间")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone --depth"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" https://github.com/xjh22222228/git-manual.git\n")])])]),e("hr"),s._v(" "),e("h2",{attrs:{id:"查看分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看分支"}},[s._v("#")]),s._v(" 查看分支")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -a\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看本地分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看远端分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -r\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看本地分支所关联的远程分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -vv\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看本地 master 分支创建时间")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reflog show --date"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("iso master\n")])])]),e("h2",{attrs:{id:"切换分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#切换分支"}},[s._v("#")]),s._v(" 切换分支")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2种方法，切换到master分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" switch master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切换上一个分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切换远端分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -t origin/dev\n")])])]),e("h2",{attrs:{id:"创建分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建分支"}},[s._v("#")]),s._v(" 创建分支")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建develop本地分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch develop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建本地develop分支并切换")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b develop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建远程分支, 实际上创建本地分支然后推送")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b develop\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin develop\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个空的分支, 不继承父分支，历史记录是空的，一般至少需要执行4步")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout --orphan develop\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这一步可选，如果你真的想创建一个没有任何文件的分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加并提交，否则分支是隐藏的 （执行这一步之前需要注意当前工作区必须保留一个文件，否则无法提交）")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -A "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"提交"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送到远程")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push --set-upstream origin develop\n")])])]),e("h2",{attrs:{id:"删除分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[s._v("#")]),s._v(" 删除分支")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除本地分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branchName"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除远程分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin :"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branchName"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"重命名分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重命名分支"}},[s._v("#")]),s._v(" 重命名分支")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重命名当前分支, 通常情况下需要执行3步")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1、修改分支名称")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2、删除远程旧分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3、将重命名分支推送到远程")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -m "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branchName"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin :old_branch\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -u origin new_branch\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重命名指定分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -m old_branch new_branch\n")])])]),e("hr"),s._v(" "),e("h2",{attrs:{id:"代码合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码合并"}},[s._v("#")]),s._v(" 代码合并")]),s._v(" "),e("img",{staticStyle:{zoom:"100%"},attrs:{src:a(518),alt:"img"}}),s._v(" "),e("p",[s._v("合并代码，处理冲突")]),s._v(" "),e("img",{staticStyle:{zoom:"100%"},attrs:{src:a(519),alt:"img"}}),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 两步法, 将 feature/v1.0.0 分支代码合并到 develop")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout develop\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge feature/v1.0.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者一步法")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge feature/v1.0.0 develop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以安静模式合并, 把develop分支合并到当前分支并不输出任何信息")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge develop -q\n")])])]),e("h2",{attrs:{id:"暂存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#暂存"}},[s._v("#")]),s._v(" 暂存")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暂存所有")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -A\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暂存某个文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" ./README.md\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暂存当前目录所有改动文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暂存一系列文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".txt "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".txt "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),e("h2",{attrs:{id:"删除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[s._v("#")]),s._v(" 删除")]),s._v(" "),e("p",[s._v("git add 的反向操作")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除1.txt 文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".txt\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除当前所有文件, 与rm -rf 命令不同的是不会删除 .git 目录")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清除当前工作区缓存，但不会删除文件，通常用于修改文件名不生效问题")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -r --cached "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),e("h2",{attrs:{id:"提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提交"}},[s._v("#")]),s._v(" 提交")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -m 提交的信息")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"changes log"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只提交某个文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit README.md -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 提交并显示diff变化")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -v\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许提交空消息，通常必须指定 -m 参数")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit --allow-empty-message\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重写上一次提交信息，确保当前工作区没有改动")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit --amend -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"新的提交信息"')]),s._v("\n")])])]),e("h2",{attrs:{id:"推送"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推送"}},[s._v("#")]),s._v(" 推送")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送内容到主分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -u origin master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 本地分支推送到远程， 本地分支:远程分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branchName"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branchName"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 简写，默认推送当前分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 强制推送, -f 是 --force 缩写")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -f\n")])])]),e("hr"),s._v(" "),e("h2",{attrs:{id:"拉取最新内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拉取最新内容"}},[s._v("#")]),s._v(" 拉取最新内容")]),s._v(" "),e("img",{staticStyle:{zoom:"100%"},attrs:{src:a(520),alt:"img"}}),s._v(" "),e("img",{staticStyle:{zoom:"100%"},attrs:{src:a(521),alt:"img"}}),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推荐，因为不会做自动合并")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch origin master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 相当于git fetch 然后 git merge")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 后面的意思是： 远程分支名:本地分支名")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull origin master:master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果是要与本地当前分支合并，则冒号后面的<本地分支名>可以不写")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull origin master\n")])])]),e("hr"),s._v(" "),e("h2",{attrs:{id:"查看文件的改动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看文件的改动"}},[s._v("#")]),s._v(" 查看文件的改动")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有文件改动")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看具体文件的改动")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" README.md\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看某个版本的改动, 后面那一窜是commitId， git log后就能看到")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" d68a1ef2407283516e8e4cb675b434505e39dc54\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看某个文件的历史修改记录")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log README.md\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" show d68a1ef2407283516e8e4cb675b434505e39dc54 README.md\n")])])]),e("hr"),s._v(" "),e("h2",{attrs:{id:"回滚版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回滚版本"}},[s._v("#")]),s._v(" 回滚版本")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 回滚上一个版本")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset --hard HEAD^\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 回滚上两个版本")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset --hard HEAD^^\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 回退到指定版本，git log 就能看到commit id了")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset --hard "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'commit id'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 回滚版本是不保存在 git log，如果想查看使用")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reflog\n")])])]),e("hr"),s._v(" "),e("h2",{attrs:{id:"撤销"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#撤销"}},[s._v("#")]),s._v(" 撤销")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 撤销当前目录下所有文件的改动")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -- "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 撤销指定文件修改")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -- README.md\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暂存区回到工作区, 指定 ./README.md 文件从暂存区回到工作区")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset HEAD ./README.md\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 撤销commit, 回到工作区, 一般commit id 是前一个")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 撤销commit, 并且把修改同时撤销")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset --hard "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标签"}},[s._v("#")]),s._v(" 标签")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出本地所有标签")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出远程所有标签")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" ls-remote --tags origin\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按照特定模式查找标签, `*` 模板搜索")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag -l "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v1.0.0*"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建带有附注标签")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag -a v1.1.0 -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"标签描述"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建轻量标签, 不需要带任何参数")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag v1.1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 后期打标签, 假设之前忘记打标签了，可以通过git log查看commit id")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag -a v1.1.0 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送到远程，默认只是本地创建")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin v1.1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一次性推送所有标签到远程")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin --tags\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除标签, 你需要再次运行 git push origin v1.1.0 才能删除远程标签")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag -d v1.1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除远程标签")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin --delete v1.1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查标签")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout v1.1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看本地某个标签详细信息")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" show v1.1.0\n")])])]),e("h2",{attrs:{id:"rebase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rebase"}},[s._v("#")]),s._v(" Rebase")]),s._v(" "),e("p",[e("code",[s._v("git rebase")]),s._v(" 主要作用可以将多个 commit 记录合并为一条")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 操作最近4次提交")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase -i HEAD~4\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者以 commit_id 进行操作")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase -i e88835de905ad396f61a0dc8c040a8ac8a34f3f8\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 放弃 git rebase 操作")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase --abort\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此命令主要用于解决冲突后继续执行")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase --continue\n")])])]),e("p",[s._v("参考："),e("a",{attrs:{href:"https://www.xiejiahe.com/blog/detail/5d550e8553d11b2c3ca05cbe",target:"_blank",rel:"noopener noreferrer"}},[s._v("git rebase 将多次 commit 合并为一条"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("git rebase 会将当前分支的提交复制到指定的分支之上。")]),s._v(" "),e("img",{staticStyle:{zoom:"100%"},attrs:{src:a(522),alt:"img"}}),s._v(" "),e("p",[s._v("交互式变基（Interactive Rebase）")]),s._v(" "),e("p",[s._v("在为提交执行变基之前，我们可以修改它们！我们可以使用交互式变基来完成这一任务。交互式变基在你当前开发的分支上以及想要修改某些提交时会很有用。")]),s._v(" "),e("p",[s._v("在我们正在 rebase 的提交上，我们可以执行以下 6 个动作：")]),s._v(" "),e("ul",[e("li",[s._v("reword：修改提交信息；")]),s._v(" "),e("li",[s._v("edit：修改此提交；")]),s._v(" "),e("li",[s._v("squash：将提交融合到前一个提交中；")]),s._v(" "),e("li",[s._v("fixup：将提交融合到前一个提交中，不保留该提交的日志消息；")]),s._v(" "),e("li",[s._v("exec：在每个提交上运行我们想要 rebase 的命令；")]),s._v(" "),e("li",[s._v("drop：移除该提交。")])]),s._v(" "),e("p",[s._v("很棒！这样我们就能完全控制我们的提交了。如果你想要移除一个提交，只需 drop 即可。")]),s._v(" "),e("img",{staticStyle:{zoom:"100%"},attrs:{src:a(523),alt:"img"}}),s._v(" "),e("p",[s._v("如果你想把多个提交融合到一起以便得到清晰的提交历史，那也没有问题！")]),s._v(" "),e("img",{staticStyle:{zoom:"100%"},attrs:{src:a(524),alt:"img"}}),s._v(" "),e("h2",{attrs:{id:"gitflow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gitflow"}},[s._v("#")]),s._v(" GitFlow")]),s._v(" "),e("p",[s._v("Git Flow 不是内置命令，需要单独安装")]),s._v(" "),e("p",[e("strong",[s._v("初始化")]),s._v(" 每个仓库都必须初始化一次")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通常直接回车以完成默认设置")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" flow init\n")])])]),e("p",[e("strong",[s._v("功能")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启新的功能")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" flow feature start v1.1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送到远程, 在团队协作中这一步少不了")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" flow feature publish v1.1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 完成功能, 会将当前分支合并到 develop 然后删除分支，回到 develop")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" flow feature finish v1.1.0\n")])])]),e("p",[e("strong",[s._v("打补丁")])]),s._v(" "),e("p",[s._v("hotfix 是针对 "),e("code",[s._v("master")]),s._v(" 进行打补丁的")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启新的 hotfix")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" flow hotfix start v1.1.0_hotifx\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送到远程")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" flow hotfix publish v1.1.0_hotifx\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 完成新的hotfix, 将当前分支合并到 master 和 develop，然后删除分支，回到 develop")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" flow hotfix finish v1.1.0_hotifx\n")])])]),e("p",[e("strong",[s._v("发布")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启新的 release")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" flow release start v1.1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送到远程")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" flow release publish v1.1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 完成, 将当前分支合并到 master 和 develop，删除当前分支然后回到 develop")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" flow release finish v1.1.0\n")])])]),e("h4",{attrs:{id:"git-flow-schema"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-flow-schema"}},[s._v("#")]),s._v(" Git flow schema")]),s._v(" "),e("p",[e("img",{staticClass:"lazy",attrs:{alt:"","data-src":"media/git-flow.png",loading:"lazy"}})]),s._v(" "),e("hr"),s._v(" "),e("h2",{attrs:{id:"子模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#子模块"}},[s._v("#")]),s._v(" 子模块")]),s._v(" "),e("p",[s._v("具体使用还可以看这里 "),e("a",{attrs:{href:"https://www.xiejiahe.com/blog/detail/5dbceefc0bb52b1c88c30853",target:"_blank",rel:"noopener noreferrer"}},[s._v("git submodule 子模块使用教程"),e("OutboundLink")],1)]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加子模块")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" submodule "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" https://github.com/xjh22222228/git-manual.git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更新，有2种方法")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一步到位")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" submodule update --remote\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者进入到子模块项目再拉取")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修复子模块分支指向 detached head")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" submodule foreach -q --recursive "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git checkout "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config -f $toplevel/.gitmodules submodule.$name.branch "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" master"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除子模块 common 为子模块名称，一般删除需要三部")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" submodule deinit "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("common"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清除子模块缓存")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" --cached common\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 提交代码并推送")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Remove a submodule"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n")])])]),e("h2",{attrs:{id:"帮助"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#帮助"}},[s._v("#")]),s._v(" 帮助")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 详细打印所有git命令")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印所有git命令, 此命令不会有详细信息，更清晰一些")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" -a\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有可配置的变量")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" -c\n")])])]),e("h2",{attrs:{id:"清空-commit-历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#清空-commit-历史"}},[s._v("#")]),s._v(" 清空 commit 历史")]),s._v(" "),e("p",[s._v("假设当前分支是 "),e("code",[s._v("develop")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1、新建一个新分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout --orphan new_branch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2、暂存所有文件并提交")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -A "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"First commit"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3、删除本地 develop 分支")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -D develop\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4、再将 new_branch 分支重命名为 develop")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -m develop\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5、强制将 develop 分支推送到远程")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -f origin develop\n")])])]),e("h2",{attrs:{id:"reflog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reflog"}},[s._v("#")]),s._v(" Reflog")]),s._v(" "),e("p",[s._v("每个人都会犯错，但犯错其实没啥！有时候你可能感觉你把 git repo 完全搞坏了，让你想完全删了了事。")]),s._v(" "),e("p",[s._v("git reflog 是一个非常有用的命令，可以展示已经执行过的所有动作的日志。包括合并、重置、还原，基本上包含你对你的分支所做的任何修改。")]),s._v(" "),e("img",{staticStyle:{zoom:"100%"},attrs:{src:a(525),alt:"img"}}),s._v(" "),e("p",[s._v("如果你犯了错，你可以根据 reflog 提供的信息通过重置 HEAD 来轻松地重做！")]),s._v(" "),e("p",[s._v("假设我们实际上并不需要合并原有分支。当我们执行 git reflog 命令时，我们可以看到这个 repo 的状态在合并前位于 HEAD@{1}。那我们就执行一次 git reset，将 HEAD 重新指向在 HEAD@{1} 的位置。")]),s._v(" "),e("img",{staticStyle:{zoom:"100%"},attrs:{src:a(526),alt:"img"}}),s._v(" "),e("h2",{attrs:{id:"其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[s._v("#")]),s._v(" 其他")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看git版本")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" --version\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看远程仓库地址")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote -v\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 记住提交账号密码")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global credential.helper store\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清除git已保存的用户名和密码")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# windows")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" credential-manager uninstall\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mac linux")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global credential.helper "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global --unset credential.helper\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清除本地git缓存")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -r --cached "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),e("h2",{attrs:{id:"回到远程仓库的状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回到远程仓库的状态"}},[s._v("#")]),s._v(" 回到远程仓库的状态")]),s._v(" "),e("p",[s._v("抛弃本地所有的修改，回到远程仓库的状态。")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch --all "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset --hard origin/master\n")])])]),e("h2",{attrs:{id:"重设第一个-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重设第一个-commit"}},[s._v("#")]),s._v(" 重设第一个 commit")]),s._v(" "),e("p",[s._v("也就是把所有的改动都重新放回工作区，并"),e("strong",[s._v("清空所有的 commit")]),s._v("，这样就可以重新提交第一个 commit 了")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" update-ref -d HEAD\n")])])]),e("h2",{attrs:{id:"查看冲突文件列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看冲突文件列表"}},[s._v("#")]),s._v(" 查看冲突文件列表")]),s._v(" "),e("p",[s._v("展示工作区的冲突文件列表")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" --name-only --diff-filter"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("U\n")])])]),e("h2",{attrs:{id:"展示工作区和暂存区的不同"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示工作区和暂存区的不同"}},[s._v("#")]),s._v(" 展示工作区和暂存区的不同")]),s._v(" "),e("p",[s._v("输出"),e("strong",[s._v("工作区")]),s._v("和"),e("strong",[s._v("暂存区")]),s._v("的 different (不同)。")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v("\n")])])]),e("p",[s._v("还可以展示本地仓库中任意两个 commit 之间的文件变动：")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"展示暂存区和最近版本的不同"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示暂存区和最近版本的不同"}},[s._v("#")]),s._v(" 展示暂存区和最近版本的不同")]),s._v(" "),e("p",[s._v("输出"),e("strong",[s._v("暂存区")]),s._v("和本地最近的版本 (commit) 的 different (不同)。")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" --cached\n")])])]),e("h2",{attrs:{id:"展示暂存区、工作区和最近版本的不同"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示暂存区、工作区和最近版本的不同"}},[s._v("#")]),s._v(" 展示暂存区、工作区和最近版本的不同")]),s._v(" "),e("p",[s._v("输出"),e("strong",[s._v("工作区")]),s._v("、"),e("strong",[s._v("暂存区")]),s._v(" 和本地最近的版本 (commit) 的 different (不同)。")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" HEAD\n")])])]),e("h2",{attrs:{id:"快速切换到上一个分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#快速切换到上一个分支"}},[s._v("#")]),s._v(" 快速切换到上一个分支")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -\n")])])]),e("h2",{attrs:{id:"删除已经合并到-master-的分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除已经合并到-master-的分支"}},[s._v("#")]),s._v(" 删除已经合并到 master 的分支")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch --merged master "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^\\*\\|  master'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -n "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d\n")])])]),e("h2",{attrs:{id:"展示本地分支关联远程仓库的情况"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示本地分支关联远程仓库的情况"}},[s._v("#")]),s._v(" 展示本地分支关联远程仓库的情况")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -vv\n")])])]),e("h2",{attrs:{id:"关联远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关联远程分支"}},[s._v("#")]),s._v(" 关联远程分支")]),s._v(" "),e("p",[s._v("关联之后，"),e("code",[s._v("git branch -vv")]),s._v(" 就可以展示关联的远程分支名了，同时推送到远程仓库直接："),e("code",[s._v("git push")]),s._v("，不需要指定远程仓库了。")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -u origin/mybranch\n")])])]),e("p",[s._v("或者在 push 时加上 "),e("code",[s._v("-u")]),s._v(" 参数")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin/mybranch -u\n")])])]),e("h2",{attrs:{id:"列出所有远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#列出所有远程分支"}},[s._v("#")]),s._v(" 列出所有远程分支")]),s._v(" "),e("p",[s._v("-r 参数相当于：remote")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -r\n")])])]),e("h2",{attrs:{id:"列出本地和远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#列出本地和远程分支"}},[s._v("#")]),s._v(" 列出本地和远程分支")]),s._v(" "),e("p",[s._v("-a 参数相当于：all")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -a\n")])])]),e("h2",{attrs:{id:"查看远程分支和本地分支的对应关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看远程分支和本地分支的对应关系"}},[s._v("#")]),s._v(" 查看远程分支和本地分支的对应关系")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote show origin\n")])])]),e("h2",{attrs:{id:"远程删除了分支本地也想删除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#远程删除了分支本地也想删除"}},[s._v("#")]),s._v(" 远程删除了分支本地也想删除")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote prune origin\n")])])]),e("h2",{attrs:{id:"创建并切换到本地分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建并切换到本地分支"}},[s._v("#")]),s._v(" 创建并切换到本地分支")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"从远程分支中创建并切换到本地分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从远程分支中创建并切换到本地分支"}},[s._v("#")]),s._v(" 从远程分支中创建并切换到本地分支")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" origin/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"删除本地分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除本地分支"}},[s._v("#")]),s._v(" 删除本地分支")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("local-branchname"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"删除远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除远程分支"}},[s._v("#")]),s._v(" 删除远程分支")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin --delete "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("remote-branchname"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("p",[s._v("或者")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin :"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("remote-branchname"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"重命名本地分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重命名本地分支"}},[s._v("#")]),s._v(" 重命名本地分支")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -m "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("new-branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"查看标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看标签"}},[s._v("#")]),s._v(" 查看标签")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag\n")])])]),e("p",[s._v("展示当前分支的最近的 tag")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" describe --tags --abbrev"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),e("h2",{attrs:{id:"查看标签详细信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看标签详细信息"}},[s._v("#")]),s._v(" 查看标签详细信息")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag -ln\n")])])]),e("h2",{attrs:{id:"本地创建标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本地创建标签"}},[s._v("#")]),s._v(" 本地创建标签")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("version-number"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("p",[s._v("默认 tag 是打在最近的一次 commit 上，如果需要指定 commit 打 tag：")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag -a "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("version-number"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v1.0 发布(描述)"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"推送标签到远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推送标签到远程仓库"}},[s._v("#")]),s._v(" 推送标签到远程仓库")]),s._v(" "),e("p",[s._v("首先要保证本地创建好了标签才可以推送标签到远程仓库：")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("local-version-number"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("p",[s._v("一次性推送所有标签，同步到远程仓库：")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin --tags\n")])])]),e("h2",{attrs:{id:"删除本地标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除本地标签"}},[s._v("#")]),s._v(" 删除本地标签")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag -d "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("tag-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"删除远程标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除远程标签"}},[s._v("#")]),s._v(" 删除远程标签")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin --delete tag "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("tagname"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"切回到某个标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#切回到某个标签"}},[s._v("#")]),s._v(" 切回到某个标签")]),s._v(" "),e("p",[s._v("一般上线之前都会打 tag，就是为了防止上线后出现问题，方便快速回退到上一版本。下面的命令是回到某一标签下的状态：")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b branch_name tag_name\n")])])]),e("h2",{attrs:{id:"放弃工作区的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#放弃工作区的修改"}},[s._v("#")]),s._v(" 放弃工作区的修改")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("p",[s._v("放弃所有修改：")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),e("h2",{attrs:{id:"恢复删除的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#恢复删除的文件"}},[s._v("#")]),s._v(" 恢复删除的文件")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rev-list -n "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" HEAD -- "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#得到 deleting_commit")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("deleting_commit"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("^ -- "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#回到删除文件 deleting_commit 之前的状态")]),s._v("\n")])])]),e("h2",{attrs:{id:"以新增一个-commit-的方式还原某一个-commit-的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#以新增一个-commit-的方式还原某一个-commit-的修改"}},[s._v("#")]),s._v(" 以新增一个 commit 的方式还原某一个 commit 的修改")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" revert "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"回到某个-commit-的状态-并删除后面的-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回到某个-commit-的状态-并删除后面的-commit"}},[s._v("#")]),s._v(" 回到某个 commit 的状态，并删除后面的 commit")]),s._v(" "),e("p",[s._v("和 revert 的区别：reset 命令会抹去某个 commit id 之后的所有 commit")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#默认就是-mixed参数。")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset  -- mixed HEAD^  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#回退至上个版本，它将重置HEAD到另外一个commit,并且重置暂存区以便和HEAD相匹配，但是也到此为止。工作区不会被更改。")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset -- soft HEAD~3  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#回退至三个版本之前，只回退了commit的信息，暂存区和工作区与回退之前保持一致。如果还要提交，直接commit即可  ")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset -- hard "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#彻底回退到指定commit-id的状态，暂存区和工作区也会变为指定commit-id版本的内容")]),s._v("\n")])])]),e("h2",{attrs:{id:"修改上一个-commit-的描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改上一个-commit-的描述"}},[s._v("#")]),s._v(" 修改上一个 commit 的描述")]),s._v(" "),e("p",[s._v("如果暂存区有改动，同时也会将暂存区的改动提交到上一个 commit")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit --amend\n")])])]),e("h2",{attrs:{id:"查看-commit-历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看-commit-历史"}},[s._v("#")]),s._v(" 查看 commit 历史")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log\n")])])]),e("h2",{attrs:{id:"查看某段代码是谁写的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看某段代码是谁写的"}},[s._v("#")]),s._v(" 查看某段代码是谁写的")]),s._v(" "),e("p",[s._v("blame 的意思为‘责怪’，你懂的。")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" blame "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"显示本地更新过-head-的-git-命令记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#显示本地更新过-head-的-git-命令记录"}},[s._v("#")]),s._v(" 显示本地更新过 HEAD 的 git 命令记录")]),s._v(" "),e("p",[s._v("每次更新了 HEAD 的 git 命令比如 commint、amend、cherry-pick、reset、revert 等都会被记录下来（不限分支），就像 shell 的 history 一样。"),e("br"),s._v("\n这样你可以 reset 到任何一次更新了 HEAD 的操作之后，而不仅仅是回到当前分支下的某个 commit 之后的状态。")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reflog\n")])])]),e("h2",{attrs:{id:"修改作者名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改作者名"}},[s._v("#")]),s._v(" 修改作者名")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit --amend --author"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Author Name <email@address.com>'")]),s._v("\n")])])]),e("h2",{attrs:{id:"修改远程仓库的-url"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改远程仓库的-url"}},[s._v("#")]),s._v(" 修改远程仓库的 url")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote set-url origin "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("URL"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"增加远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增加远程仓库"}},[s._v("#")]),s._v(" 增加远程仓库")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("remote-url"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"列出所有远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#列出所有远程仓库"}},[s._v("#")]),s._v(" 列出所有远程仓库")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote\n")])])]),e("h2",{attrs:{id:"查看两个星期内的改动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看两个星期内的改动"}},[s._v("#")]),s._v(" 查看两个星期内的改动")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" whatchanged --since"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2 weeks ago'")]),s._v("\n")])])]),e("h2",{attrs:{id:"把-a-分支的某一个-commit-放到-b-分支上"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#把-a-分支的某一个-commit-放到-b-分支上"}},[s._v("#")]),s._v(" 把 A 分支的某一个 commit，放到 B 分支上")]),s._v(" "),e("p",[s._v("这个过程需要 "),e("code",[s._v("cherry-pick")]),s._v(" 命令，"),e("a",{attrs:{href:"http://sg552.iteye.com/blog/1300713#bc2367928",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考"),e("OutboundLink")],1)]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cherry-pick "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"给-git-命令起别名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#给-git-命令起别名"}},[s._v("#")]),s._v(" 给 git 命令起别名")]),s._v(" "),e("p",[s._v("简化命令")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global alias."),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("handle"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("command"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n比如：git status 改成 "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" st，这样可以简化命令\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global alias.st status\n")])])]),e("h2",{attrs:{id:"存储当前的修改-但不用提交-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#存储当前的修改-但不用提交-commit"}},[s._v("#")]),s._v(" 存储当前的修改，但不用提交 commit")]),s._v(" "),e("p",[s._v("详解可以参考"),e("a",{attrs:{href:"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137602359178794d966923e5c4134bc8bf98dfb03aea3000",target:"_blank",rel:"noopener noreferrer"}},[s._v("廖雪峰老师的 git 教程"),e("OutboundLink")],1)]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash\n")])])]),e("h2",{attrs:{id:"保存当前状态-包括-untracked-的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#保存当前状态-包括-untracked-的文件"}},[s._v("#")]),s._v(" 保存当前状态，包括 untracked 的文件")]),s._v(" "),e("p",[s._v("untracked 文件：新建的文件")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash -u\n")])])]),e("h2",{attrs:{id:"展示所有-stashes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示所有-stashes"}},[s._v("#")]),s._v(" 展示所有 stashes")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash list\n")])])]),e("h2",{attrs:{id:"回到某个-stash-的状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回到某个-stash-的状态"}},[s._v("#")]),s._v(" 回到某个 stash 的状态")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash apply "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("stash@"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"回到最后一个-stash-的状态-并删除这个-stash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回到最后一个-stash-的状态-并删除这个-stash"}},[s._v("#")]),s._v(" 回到最后一个 stash 的状态，并删除这个 stash")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash pop\n")])])]),e("h2",{attrs:{id:"删除所有的-stash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除所有的-stash"}},[s._v("#")]),s._v(" 删除所有的 stash")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("clear")]),s._v("\n")])])]),e("h2",{attrs:{id:"从-stash-中拿出某个文件的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从-stash-中拿出某个文件的修改"}},[s._v("#")]),s._v(" 从 stash 中拿出某个文件的修改")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("stash@"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -- "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file-path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"展示所有-tracked-的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示所有-tracked-的文件"}},[s._v("#")]),s._v(" 展示所有 tracked 的文件")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" ls-files -t\n")])])]),e("h2",{attrs:{id:"展示所有-untracked-的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示所有-untracked-的文件"}},[s._v("#")]),s._v(" 展示所有 untracked 的文件")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" ls-files --others\n")])])]),e("h2",{attrs:{id:"展示所有忽略的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示所有忽略的文件"}},[s._v("#")]),s._v(" 展示所有忽略的文件")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" ls-files --others -i --exclude-standard\n")])])]),e("h2",{attrs:{id:"强制删除-untracked-的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强制删除-untracked-的文件"}},[s._v("#")]),s._v(" 强制删除 untracked 的文件")]),s._v(" "),e("p",[s._v("可以用来删除新建的文件。如果不指定文件文件名，则清空所有工作的 untracked 文件。"),e("code",[s._v("clean")]),s._v(" 命令，"),e("strong",[s._v("注意两点")]),s._v("：")]),s._v(" "),e("ol",[e("li",[s._v("clean 后，删除的文件无法找回")]),s._v(" "),e("li",[s._v("不会影响 tracked 的文件的改动，只会删除 untracked 的文件")])]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clean "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -f\n")])])]),e("h2",{attrs:{id:"强制删除-untracked-的目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强制删除-untracked-的目录"}},[s._v("#")]),s._v(" 强制删除 untracked 的目录")]),s._v(" "),e("p",[s._v("可以用来删除新建的目录，"),e("strong",[s._v("注意")]),s._v(":这个命令也可以用来删除 untracked 的文件。详情见上一条")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clean "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("directory-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -df\n")])])]),e("h2",{attrs:{id:"展示简化的-commit-历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示简化的-commit-历史"}},[s._v("#")]),s._v(" 展示简化的 commit 历史")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --pretty"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("oneline --graph --decorate --all\n")])])]),e("h2",{attrs:{id:"把某一个分支到导出成一个文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#把某一个分支到导出成一个文件"}},[s._v("#")]),s._v(" 把某一个分支到导出成一个文件")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" bundle create "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"从包中导入分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从包中导入分支"}},[s._v("#")]),s._v(" 从包中导入分支")]),s._v(" "),e("p",[s._v("新建一个分支，分支内容就是上面 "),e("code",[s._v("git bundle create")]),s._v(" 命令导出的内容")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone repo.bundle "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("repo-dir"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -b "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"执行-rebase-之前自动-stash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行-rebase-之前自动-stash"}},[s._v("#")]),s._v(" 执行 rebase 之前自动 stash")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase --autostash\n")])])]),e("h2",{attrs:{id:"从远程仓库根据-id-拉下某一状态-到本地分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从远程仓库根据-id-拉下某一状态-到本地分支"}},[s._v("#")]),s._v(" 从远程仓库根据 ID，拉下某一状态，到本地分支")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch origin pull/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/head:"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"详细展示一行中的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#详细展示一行中的修改"}},[s._v("#")]),s._v(" 详细展示一行中的修改")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" --word-diff\n")])])]),e("h2",{attrs:{id:"清除-gitignore-文件中记录的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#清除-gitignore-文件中记录的文件"}},[s._v("#")]),s._v(" 清除 gitignore 文件中记录的文件")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clean -X -f\n")])])]),e("h2",{attrs:{id:"展示所有-alias-和-configs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示所有-alias-和-configs"}},[s._v("#")]),s._v(" 展示所有 alias 和 configs")]),s._v(" "),e("p",[e("strong",[s._v("注意：")]),s._v(" config 分为：当前目录（local）和全局（golbal）的 config，默认为当前目录的 config")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --local --list "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("当前目录"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global --list "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("全局"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),e("h2",{attrs:{id:"展示忽略的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示忽略的文件"}},[s._v("#")]),s._v(" 展示忽略的文件")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status --ignored\n")])])]),e("h2",{attrs:{id:"commit-历史中显示-branch1-有的-但是-branch2-没有-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commit-历史中显示-branch1-有的-但是-branch2-没有-commit"}},[s._v("#")]),s._v(" commit 历史中显示 Branch1 有的，但是 Branch2 没有 commit")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log Branch1 ^Branch2\n")])])]),e("h2",{attrs:{id:"在-commit-log-中显示-gpg-签名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-commit-log-中显示-gpg-签名"}},[s._v("#")]),s._v(" 在 commit log 中显示 GPG 签名")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --show-signature\n")])])]),e("h2",{attrs:{id:"删除全局设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除全局设置"}},[s._v("#")]),s._v(" 删除全局设置")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global --unset "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("entry-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"新建并切换到新分支上-同时这个分支没有任何-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#新建并切换到新分支上-同时这个分支没有任何-commit"}},[s._v("#")]),s._v(" 新建并切换到新分支上，同时这个分支没有任何 commit")]),s._v(" "),e("p",[s._v("相当于保存修改，但是重写 commit 历史")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout --orphan "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"展示任意分支某一文件的内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示任意分支某一文件的内容"}},[s._v("#")]),s._v(" 展示任意分支某一文件的内容")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" show "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"clone-下来指定的单一分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clone-下来指定的单一分支"}},[s._v("#")]),s._v(" clone 下来指定的单一分支")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone -b "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --single-branch https://github.com/user/repo.git\n")])])]),e("h2",{attrs:{id:"clone-最新一次提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clone-最新一次提交"}},[s._v("#")]),s._v(" clone 最新一次提交")]),s._v(" "),e("p",[s._v("只会 clone 最近一次提交，将减少 clone 时间")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone --depth"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" https://github.com/user/repo.git\n")])])]),e("h2",{attrs:{id:"忽略某个文件的改动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#忽略某个文件的改动"}},[s._v("#")]),s._v(" 忽略某个文件的改动")]),s._v(" "),e("p",[s._v("关闭 track 指定文件的改动，也就是 Git 将不会在记录这个文件的改动")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" update-index --assume-unchanged path/to/file\n")])])]),e("p",[s._v("恢复 track 指定文件的改动")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" update-index --no-assume-unchanged path/to/file\n")])])]),e("h2",{attrs:{id:"忽略文件的权限变化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#忽略文件的权限变化"}},[s._v("#")]),s._v(" 忽略文件的权限变化")]),s._v(" "),e("p",[s._v("不再将文件的权限变化视作改动")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config core.fileMode "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n")])])]),e("h2",{attrs:{id:"以最后提交的顺序列出所有-git-分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#以最后提交的顺序列出所有-git-分支"}},[s._v("#")]),s._v(" 以最后提交的顺序列出所有 Git 分支")]),s._v(" "),e("p",[s._v("最新的放在最上面")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" for-each-ref --sort"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("-committerdate --format"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/heads/\n")])])]),e("h2",{attrs:{id:"在-commit-log-中查找相关内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-commit-log-中查找相关内容"}},[s._v("#")]),s._v(" 在 commit log 中查找相关内容")]),s._v(" "),e("p",[s._v("通过 grep 查找，given-text：所需要查找的字段")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --all --grep"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<given-text>'")]),s._v("\n")])])]),e("h2",{attrs:{id:"把暂存区的指定-file-放到工作区中"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#把暂存区的指定-file-放到工作区中"}},[s._v("#")]),s._v(" 把暂存区的指定 file 放到工作区中")]),s._v(" "),e("p",[s._v("不添加参数，默认是 "),e("code",[s._v("-mixed")])]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"强制推送"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强制推送"}},[s._v("#")]),s._v(" 强制推送")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -f "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("remote-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("h2",{attrs:{id:"git-配置-http-和-socks-代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-配置-http-和-socks-代理"}},[s._v("#")]),s._v(" git 配置 http 和 socks 代理")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global https.proxy "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://127.0.0.1:8001'")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 适用于 privoxy 将 socks 协议转为 http 协议的 http 端口")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global http.proxy "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://127.0.0.1:8001'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global socks.proxy "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"127.0.0.1:1080"')]),s._v("\n")])])]),e("h2",{attrs:{id:"git-配置-ssh-代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-配置-ssh-代理"}},[s._v("#")]),s._v(" git 配置 ssh 代理")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" ~/.ssh/config\nHost gitlab.com\nProxyCommand "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("nc")]),s._v(" -X "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" -x "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:1080 %h %p    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 直接使用 shadowsocks 提供的 socks5 代理端口")]),s._v("\n\nHost github.com\nProxyCommand "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("nc")]),s._v(" -X "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" -x "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:1080 %h %p\n")])])]),e("h2",{attrs:{id:"优雅的提交-commit-信息2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优雅的提交-commit-信息2"}},[s._v("#")]),s._v(" 优雅的提交 Commit 信息2")]),s._v(" "),e("p",[s._v("使用"),e("a",{attrs:{href:"https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines",target:"_blank",rel:"noopener noreferrer"}},[s._v("Angular 团队提交规范"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("主要有以下组成")]),s._v(" "),e("ul",[e("li",[s._v("标题行: 必填, 描述主要修改类型和内容")]),s._v(" "),e("li",[s._v("主题内容: 描述为什么修改, 做了什么样的修改, 以及开发的思路等等")]),s._v(" "),e("li",[s._v("页脚注释: 放 Breaking Changes 或 Closed Issues")])]),s._v(" "),e("p",[s._v("常用的修改项")]),s._v(" "),e("ul",[e("li",[s._v("type: commit 的类型")]),s._v(" "),e("li",[s._v("feat: 新特性")]),s._v(" "),e("li",[s._v("fix: 修改问题")]),s._v(" "),e("li",[s._v("refactor: 代码重构")]),s._v(" "),e("li",[s._v("docs: 文档修改")]),s._v(" "),e("li",[s._v("style: 代码格式修改, 注意不是 css 修改")]),s._v(" "),e("li",[s._v("test: 测试用例修改")]),s._v(" "),e("li",[s._v("chore: 其他修改, 比如构建流程, 依赖管理.")]),s._v(" "),e("li",[s._v("scope: commit 影响的范围, 比如: route, component, utils, build...")]),s._v(" "),e("li",[s._v("subject: commit 的概述")]),s._v(" "),e("li",[s._v("body: commit 具体修改内容, 可以分为多行")]),s._v(" "),e("li",[s._v("footer: 一些备注, 通常是 BREAKING CHANGE 或修复的 bug 的链接.")])])])}),[],!1,null,null,null);t.default=n.exports}}]);